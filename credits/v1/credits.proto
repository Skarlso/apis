// 
// DISCLAIMER
// 
// Copyright 2023 ArangoDB GmbH, Cologne, Germany
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Copyright holder is ArangoDB GmbH, Cologne, Germany
// 

syntax = "proto3";

package arangodb.cloud.credits.v1;

option go_package = "github.com/arangodb-managed/apis/credits/v1";

import "common/v1/common.proto";

import "github.com/golang/protobuf/ptypes/timestamp/timestamp.proto";
import "google/api/annotations.proto";

// CreditsService is the API used for managing credits.
service CreditsService {
    // Get the current API version of this service.
    // Required permissions:
    // - None (authenticated only)
    rpc GetAPIVersion(common.v1.Empty) returns (common.v1.Version) {
        option (google.api.http) = {
            get: "/api/credit/v1/api-version"
        };
    }

    // List credit bundles for an organization based on the provided request.
    // Required permissions:
    // - credit.creditbundle.list on the organization identified by the given organization ID
    rpc ListCreditBundles(ListCreditBundlesRequest) returns (CreditBundlesList) {
        option (google.api.http) = {
            get: "/api/credit/v1/{organization_id}/creditbundles"
        };
    }

    // List credit bundle usages for an organization based on the provided request.
    // Required permissions:
    // - credit.creditbundleusage.list on the organization identified by the given organization ID.
    rpc ListCreditBundlesUsage(ListCreditBundleUsageRequest) returns (CreditBundleUsageList) {
        option (google.api.http) = {
            get: "/api/credit/v1/{organization_id}/creditbundleusages"
        };
    };

    // Request the creation of a new credit usage PDF report.
    // The server returns a response immediately and handles the actual
    // PDF creation asynchronously.
    // The client is expected to poll the status of the PDF report.
    // Once the PDF report is ready, the contents may be obtained using GetCreditBundleUsagePDFReport rpc.
    // Required permissions:
    // - credit.pdf.create on organization identified by the given organization ID.
    rpc CreateUsagePDFReport(PDFReport) returns (PDFReport) {
        option (google.api.http) = {
            post: "/api/credit/v1/{organization_id}/pdf"
        };
    };

    // Get a credit bundle usage PDF report identified by the given id,
    // owned by the organization identified by the `organization_id`.
    // Returns an error if the PDFReport is not yet ready.
    // Required permissions:
    // - credit.pdf.get on organization identified by the given organization ID.
    rpc GetUsagePDFReport(GetUsagePDFReportRequest) returns (PDFReport) {
        option (google.api.http) = {
            get: "/api/credit/v1/{organization_id}/pdf/{report_id}"
        };
    }

    // List the PDF reports for the organization identified by the ID.
    // The response will not include the PDF content bytes.
    // Use `GetCreditBundleUsagePDFReport` rpc for getting the content bytes of a ready PDFReport.
    // Required permissions:
    // - credit.pdf.list on organization identified by the given organization ID.
    rpc ListUsagePDFReports(ListPDFReportsRequest) returns (ListPDFReportsResponse) {
        option (google.api.http) = {
            get: "/api/credit/v1/{organization_id}/pdfs"
        };
    }
}

message GetUsagePDFReportRequest {
    // ID of the PDF report that needs to be fetched.
    // This is a read-only field.
    string report_id = 1;
    // ID of the organization that owns this report.
    // This is a read-only field.
    string organization_id = 2;
}

// Response for ListPDFReports
message ListPDFReportsResponse {
    repeated PDFReport items = 1;
}

// Request for listing PDF reports.
message ListPDFReportsRequest {
    // ID of the organization for which PDF reports are requested.
    string organization_id = 1;
}

message PDFReport {
    // ID of this PDF report.
    // This is a read-only field.
    string id = 1;
    // ID of the organization to which this report belongs to.
    // This is a required field.
    string organization_id = 2;
    // The date from which credit usage is listed.
    // This is a required field.
    google.protobuf.Timestamp starts_at = 3;
    // The date until which credit usage is listed.
    // This is a required field.
    google.protobuf.Timestamp ends_at = 4;

    // The timestamp at which this report was requested.
    // This is a read-only field.
    google.protobuf.Timestamp requested_at = 5;

    // Status of the PDF report.
    // This is a read-only block.
    message Status {
        // The contents of the PDF.
        // This is filled in by the server.
        // This is a read-only field.
        bytes contents = 1;
        // If set, this PDF report is ready.
        // The contents may be read from the contents field.
        // This is a read-only field.
        bool is_ready = 2;
        // The timestamp at which this report was ready.
        // This is a read-only field.
        google.protobuf.Timestamp ready_at = 3;
        // The timestamp at which this report expires.
        // Once this timestamp is met, the report is no longer available in the system.
        // This is a read-only field.
        google.protobuf.Timestamp expires_at = 4;
    }
    // Status of the PDF report.
    // This is a read-only field.
    Status status = 20;
}


// Request for listing credit bundle usages.
message ListCreditBundleUsageRequest {
    // The organization this credit bundle belongs to.
    // This is a required field.
    string organization_id = 1;
    // If set, list the usage for the specified credit bundle only.
    // By default, returns the usage for all credit bundles in this organization.
    // This is an optional field.
    string credit_bundle_id = 2;
    // The date from which credit usage should be listed.
    // If unspecified, defaults to the date 7 days before `ends_at`.
    // This is an optional field.
    google.protobuf.Timestamp starts_at = 3;
    // The date until which credit usage should be listed.
    // If unspecified, defaults to the current date (at the time of calling the API).
    // This is an optional field.
    google.protobuf.Timestamp ends_at = 4;
    // If set, list the usage for the specified usage item only.
    // This is an optional field.
    string usage_item_id = 5;
    // Common list options
    // context_id is ignored.
    common.v1.ListOptions options = 20;
}

// Request for listing credit bundles
message ListCreditBundlesRequest {
    // ID of the organization for which credit bundles are listed.
    // This is a required field.
    string organization_id = 1;
    // If set, exclude expired bundles.
    bool exclude_expired = 2;
}

// List of credit bundles
message CreditBundlesList {
    repeated CreditBundle items = 1;
}

message CreditBundle {
    // ID of the credit bundle.
    // This is a read-only value.
    string id = 1;
    // URL of this credit bundle.
    // This is a read-only value.
    string url = 2;
    // The organization this credit bundle belongs to.
    // This is a read-only value.
    string organization_id = 4;
    // The number of credits purchased in this bundle.
    // This is a read-only value.
    float credits_purchased = 5;
    // The total price of these credits.
    // This is a read-only value.
    float total_price = 6;
    // Currency used for total_price.
    // This is a read-only value.
    string currency = 7;
    // The number of credits remaining in this bundle.
    // This is a read-only value.
    float credits_remaining = 8;
    // The date at which this bundle was purchased.
    // This is a read-only value.
    google.protobuf.Timestamp purchased_at = 9;
    // The date from which this bundle is valid.
    // This is a read-only value.
    google.protobuf.Timestamp valid_from = 10;
    // The date until which this bundle is valid.
    // This is a read-only value.
    google.protobuf.Timestamp valid_until = 11;
    // Timestamp of when this credit bundle was last used.
    google.protobuf.Timestamp last_used_at = 12;
}

// Usage of credit bundle.
// All fields are read-only.
message CreditBundleUsage {
    // Unique identifier of this credit bundle usage.
    string id = 1;
    // ID of the usage item this credit bundle usage corresponds to.
    string usage_item_id = 2;
    // ID of the credit bundle from which credit was used.
    string credit_bundle_id = 3;
    // ID of the organization this credit bundle (and usage) belongs to.
    string organization_id = 4;
    // Amount of credits used from the specified credit_bundle_id.
    float usage = 5;
    // Amount of credits remaining after this usage.
    float remaining = 6;
    // Timestamp at which this credit usage was created.
    google.protobuf.Timestamp created_at = 7;
}

// List of CreditBundleUsages.
message CreditBundleUsageList {
    repeated CreditBundleUsage items = 1;
}
