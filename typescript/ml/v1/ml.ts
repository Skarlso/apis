//
// This file is AUTO-GENERATED by protoc-gen-ts.
// Do not modify it manually.
///
import api from '../../api'
import * as googleTypes from '../../googleTypes'
import { Empty as arangodb_cloud_common_v1_Empty } from '../../common/v1/common'
import { IDOptions as arangodb_cloud_common_v1_IDOptions } from '../../common/v1/common'
import { Version as arangodb_cloud_common_v1_Version } from '../../common/v1/common'

// File: ml/v1/ml.proto
// Package: arangodb.cloud.ml.v1

// A MLDeployment represents the configuration of ArangoGraph ML for a Deployment.
export interface MLDeployment {
  // Identifier of the deployment for this MLDeployment.
  // This is a ready-only value.
  // string
  deployment_id?: string;
  
  // Set to true if ArangoGraphML services are enabled for this deployment.
  // boolean
  enabled?: boolean;
}

// MLService is the API used to configure ArangoGraphML on ArangoGraph Insights Platform.
export interface IMLService {
  // Get the current API version of this service.
  // Required permissions:
  // - None
  GetAPIVersion: (req?: arangodb_cloud_common_v1_Empty) => Promise<arangodb_cloud_common_v1_Version>;
  
  // Fetch a MLDeployment by its deployment ID.
  // Required permissions:
  // - ml.deployment.get
  GetMLDeployment: (req: arangodb_cloud_common_v1_IDOptions) => Promise<MLDeployment>;
  
  // Update a MLDeployment.
  // Required permissions:
  // - ml.deployment.update
  UpdateMLDeployment: (req: MLDeployment) => Promise<MLDeployment>;
}

// MLService is the API used to configure ArangoGraphML on ArangoGraph Insights Platform.
export class MLService implements IMLService {
  // Get the current API version of this service.
  // Required permissions:
  // - None
  async GetAPIVersion(req?: arangodb_cloud_common_v1_Empty): Promise<arangodb_cloud_common_v1_Version> {
    const path = `/api/ml/v1/api-version`;
    const url = path + api.queryString(req, []);
    return api.get(url, undefined);
  }
  
  // Fetch a MLDeployment by its deployment ID.
  // Required permissions:
  // - ml.deployment.get
  async GetMLDeployment(req: arangodb_cloud_common_v1_IDOptions): Promise<MLDeployment> {
    const path = `/api/ml/v1/deployments/${encodeURIComponent(req.id || '')}`;
    const url = path + api.queryString(req, [`id`]);
    return api.get(url, undefined);
  }
  
  // Update a MLDeployment.
  // Required permissions:
  // - ml.deployment.update
  async UpdateMLDeployment(req: MLDeployment): Promise<MLDeployment> {
    const url = `/api/ml/v1/deployments/${encodeURIComponent(req.deployment_id || '')}`;
    return api.patch(url, req);
  }
}
